{
  "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/BlazorMediatorDemo.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "3.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": 458526390,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.Counter",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.Counter"
        }
      },
      {
        "HashCode": 2104563828,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.Counter",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Pages.Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -155200975,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.FetchData",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.FetchData"
        }
      },
      {
        "HashCode": -924551476,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.FetchData",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Pages.FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1959437388,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.Index",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.Index"
        }
      },
      {
        "HashCode": -479602802,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Pages.Index",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Pages.Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Pages.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -165277343,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.MainLayout",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.MainLayout"
        }
      },
      {
        "HashCode": -342814654,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.MainLayout",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Shared.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -725535095,
        "Kind": "Components.ChildContent",
        "Name": "BlazorMediatorDemo.Shared.MainLayout.Body",
        "AssemblyName": "BlazorMediatorDemo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorMediatorDemo.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -144285834,
        "Kind": "Components.ChildContent",
        "Name": "BlazorMediatorDemo.Shared.MainLayout.Body",
        "AssemblyName": "BlazorMediatorDemo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "BlazorMediatorDemo.Shared.MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorMediatorDemo.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1955726145,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.SurveyPrompt",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.SurveyPrompt"
        }
      },
      {
        "HashCode": -472339023,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.SurveyPrompt",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Shared.SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.SurveyPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 459458397,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.NavMenu",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.NavMenu"
        }
      },
      {
        "HashCode": 1024369373,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.Shared.NavMenu",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.Shared.NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1445622881,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.App",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.App"
        }
      },
      {
        "HashCode": -241310309,
        "Kind": "Components.Component",
        "Name": "BlazorMediatorDemo.App",
        "AssemblyName": "BlazorMediatorDemo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorMediatorDemo.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorMediatorDemo.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1500973244,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost"
        }
      },
      {
        "HashCode": 543699092,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1059626,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion"
        }
      },
      {
        "HashCode": -676451405,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1673810804,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 183003097,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1728244049,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": -1733612354,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 190047288,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -817070163,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -366346015,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails"
        }
      },
      {
        "HashCode": 257725206,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1492389955,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1520615795,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1315152540,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader"
        }
      },
      {
        "HashCode": -1537328092,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -820265451,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 39648567,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 909427062,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader"
        }
      },
      {
        "HashCode": -1511157624,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -152995308,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1442770703,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 701715999,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary"
        }
      },
      {
        "HashCode": -1242274925,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1053744927,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 640879951,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1848808789,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer"
        }
      },
      {
        "HashCode": -1967406336,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -172759600,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1161363145,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1000383701,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink"
        }
      },
      {
        "HashCode": 1644924308,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -834828762,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1756731109,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -703560392,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils"
        }
      },
      {
        "HashCode": -1856316791,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1046514585,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1027516351,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 452639268,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar"
        }
      },
      {
        "HashCode": -804466713,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1794927995,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2104716992,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1963845885,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction"
        }
      },
      {
        "HashCode": 1472843131,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 305786266,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -505287963,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -674856680,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust"
        }
      },
      {
        "HashCode": 2071727252,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 26856675,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer"
        }
      },
      {
        "HashCode": -891907243,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1593083148,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1279411788,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 208768703,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent"
        }
      },
      {
        "HashCode": 1795757919,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 372200660,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -985508062,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 866480320,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon"
        }
      },
      {
        "HashCode": -106151972,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 332333420,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow"
        }
      },
      {
        "HashCode": 1888627369,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1775594569,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1037427737,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 897426309,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection"
        }
      },
      {
        "HashCode": 565855422,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1858144929,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2042628433,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1758255413,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle"
        }
      },
      {
        "HashCode": 188975749,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1473916425,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2109275866,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 340538091,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1462049771,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1266272634,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1525741626,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -68086858,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2113341438,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -204844277,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1034403649,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -594309228,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1645095466,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2000339575,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink"
        }
      },
      {
        "HashCode": -142028533,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1313096561,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 191695629,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -766612716,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton"
        }
      },
      {
        "HashCode": -1604839387,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 898041441,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1621771016,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1595537788,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard"
        }
      },
      {
        "HashCode": 8131942,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1583408484,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1086546366,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 417150300,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons"
        }
      },
      {
        "HashCode": -1015345908,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -810158537,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 651716583,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 427080680,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons"
        }
      },
      {
        "HashCode": 270101329,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2082726136,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -187451624,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2096867081,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions"
        }
      },
      {
        "HashCode": 1801401616,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 130256256,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2042220407,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1882614984,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent"
        }
      },
      {
        "HashCode": -796539443,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 963844308,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 522337913,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -856522026,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia"
        }
      },
      {
        "HashCode": -134428877,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1006717931,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -431446160,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2106139187,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 671453717,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410545610,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1579158771,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 224604848,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1006339193,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 27042835,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1342779061,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1474218869,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -611877404,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 138765210,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1230981403,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -674380224,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": -886195392,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -496010547,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2027966308,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -766753621,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1692562348,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1186998008,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 126652507,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 149679636,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1760584297,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 566450181,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1678776239,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1341159195,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable"
        }
      },
      {
        "HashCode": 697283480,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1308315881,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1752274133,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -163693213,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn"
        }
      },
      {
        "HashCode": -1790694566,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2143692161,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1937781980,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 317069272,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 745458051,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 745937442,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 444197497,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1593200188,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2095877680,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2129040336,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": 1116625751,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 614851958,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2037615275,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1335393079,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider"
        }
      },
      {
        "HashCode": -1912284040,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1867781483,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer"
        }
      },
      {
        "HashCode": -1803046961,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1876858097,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1081158014,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1367009474,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent"
        }
      },
      {
        "HashCode": 1635299778,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 935484085,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 806747255,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -471164174,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": -963555432,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1467519619,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1811487292,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 317985891,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB"
        }
      },
      {
        "HashCode": 1793680004,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -343102488,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1086493682,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 128226049,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload"
        }
      },
      {
        "HashCode": -1744785603,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2113041054,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText"
        }
      },
      {
        "HashCode": -248732057,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 673653052,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden"
        }
      },
      {
        "HashCode": -1353080336,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 688176999,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 437937100,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1956986087,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 745858560,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -759023454,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -307947093,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1058588754,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": -1714869876,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1835735718,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -77089421,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -93790662,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon"
        }
      },
      {
        "HashCode": 1393885897,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1852836010,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 774585714,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1205060682,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup"
        }
      },
      {
        "HashCode": -1492005269,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1505227150,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 335635154,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 759378027,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList"
        }
      },
      {
        "HashCode": -1347778433,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1156010148,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1327999879,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -66087480,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem"
        }
      },
      {
        "HashCode": -864273853,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 579062276,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1341534420,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1188772587,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu"
        }
      },
      {
        "HashCode": 736630355,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -799399532,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -769052976,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1115988395,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": -1702614428,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 445844667,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 207934297,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1039142867,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu"
        }
      },
      {
        "HashCode": 2092790937,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1160126295,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -620569348,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1341084821,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": -2119019013,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1376217365,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1765650488,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -205503055,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1637141552,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 580204914,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1911261481,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -199403464,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1683953162,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1094641617,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1464321363,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1817994182,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator"
        }
      },
      {
        "HashCode": 1410550293,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 477890556,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper"
        }
      },
      {
        "HashCode": 942774020,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1721401400,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -130038031,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -547857294,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar"
        }
      },
      {
        "HashCode": -890666444,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -591181868,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle"
        }
      },
      {
        "HashCode": 1100477780,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -458637640,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1339611209,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1154903435,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1108594756,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 3298303,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1998258224,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2086853304,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1953948213,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1760605324,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1885203162,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 310035813,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1899872339,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1971286818,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1760349781,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1447684216,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1394092625,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -470299464,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1695343919,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1259434748,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -949726704,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -707011745,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple"
        }
      },
      {
        "HashCode": 269324606,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 893197810,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1631256914,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 552914081,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 864718712,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -112796798,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -99088161,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 184150217,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1143915924,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1798584035,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1588171736,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -182785740,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1454303235,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 933515144,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1718714307,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1552832962,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 124986588,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -228379507,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1086073148,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -913167922,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1000141447,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1549660993,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1821789896,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -635796268,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1543370680,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1698212803,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 633284296,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1593559898,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 774961355,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1532442501,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1364766262,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1679564141,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -568533083,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 464221725,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString"
        }
      },
      {
        "HashCode": -1005079805,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1567429692,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1955339903,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1698985010,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -703204782,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 417555983,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 170903520,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1203669837,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": -2071372931,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1463587027,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 100817987,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -257501174,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader"
        }
      },
      {
        "HashCode": -2140993652,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 864213728,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1322305930,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -854674546,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": 1552199406,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 566882727,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1108892160,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2022418831,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": -1912821490,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1549676836,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1717131841,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 462220890,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel"
        }
      },
      {
        "HashCode": -47357449,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1315233262,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -638859298,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 185675755,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable"
        }
      },
      {
        "HashCode": 1907306695,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1177987678,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": 1062322147,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1541284848,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1198121310,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1667429531,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab"
        }
      },
      {
        "HashCode": -921399718,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1463233915,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1177094698,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -635653956,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 575145448,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1223429241,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -1227540099,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 87291870,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 209787502,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1711923319,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": 705745166,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1735926575,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1919048644,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 391907253,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 864944500,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 506757214,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -120316068,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2137685452,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider"
        }
      },
      {
        "HashCode": 1118215618,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1040860716,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -87634950,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1941276702,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer"
        }
      },
      {
        "HashCode": 1953479921,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 322113483,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem"
        }
      },
      {
        "HashCode": -891385663,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1770556331,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1209730402,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 805914849,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip"
        }
      },
      {
        "HashCode": 73079118,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -610882881,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1074025661,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -562654639,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1978299978,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -663937184,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1411564059,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1903600733,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -379204082,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 351742754,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 290881222,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1759476500,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1"
        }
      },
      {
        "HashCode": 1985660920,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 94812992,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 253878212,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1679837225,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2"
        }
      },
      {
        "HashCode": 284463869,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -381039103,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1741479905,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1777460834,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3"
        }
      },
      {
        "HashCode": 528203726,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1440355184,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -419274814,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -669267161,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4"
        }
      },
      {
        "HashCode": 564860009,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1464710409,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1140769624,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1406702430,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5"
        }
      },
      {
        "HashCode": -114836597,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -371143392,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 21880125,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1820173620,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6"
        }
      },
      {
        "HashCode": 28197900,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1422661712,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 522440718,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1146712170,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1"
        }
      },
      {
        "HashCode": -1338020251,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1983121281,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 954109977,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1318627930,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2"
        }
      },
      {
        "HashCode": -1764254848,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1245156448,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1503969108,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1504327303,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3"
        }
      },
      {
        "HashCode": -625646119,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1909967419,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -537201749,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 725163011,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4"
        }
      },
      {
        "HashCode": 347319881,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 793029432,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 960640474,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1146329931,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5"
        }
      },
      {
        "HashCode": 1363174197,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1301232332,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2114884777,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2006025710,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6"
        }
      },
      {
        "HashCode": 1344954909,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 730130685,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1422722487,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1917002080,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1"
        }
      },
      {
        "HashCode": -647991931,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1885279615,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1048044704,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2115046598,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2"
        }
      },
      {
        "HashCode": -32703997,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -390208515,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1649566304,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -261632575,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1"
        }
      },
      {
        "HashCode": 1138131077,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -366828972,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -317972077,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1348312131,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2"
        }
      },
      {
        "HashCode": -592237672,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1386791082,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -188381763,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -303976542,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption"
        }
      },
      {
        "HashCode": -1025648691,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 217262044,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 438262697,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1798622227,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline"
        }
      },
      {
        "HashCode": -1083737553,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1402199210,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -360469911,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1366511030,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1509203378,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1150348214,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2118632430,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 798671236,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1113801926,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1972488705,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 727493348,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1712980742,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1756520795,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1368518182,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1824639453,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1491900462,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1984202373,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 836496578,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine"
        }
      },
      {
        "HashCode": -344780030,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2037780677,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper"
        }
      },
      {
        "HashCode": -891619701,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -755113041,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -992294688,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 304268563,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1475425993,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 361182894,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -552912804,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -448279736,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -119403265,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -618455690,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1575942564,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -640168488,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1416586164,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1530371814,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1128430889,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -277836,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 287027603,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2146924079,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -21154169,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1982261154,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink"
        }
      },
      {
        "HashCode": -1870669758,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -253758212,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 111062850,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -102563277,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1561688805,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410019560,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 57601484,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 911622119,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld"
        }
      },
      {
        "HashCode": -908652513,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 241331200,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -866210967,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 324920229,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -596830309,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1376465567,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -951976070,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 326566840,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1641009989,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 631017912,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld"
        }
      },
      {
        "HashCode": -1298332166,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 562589479,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 127976990,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1829280385,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld"
        }
      },
      {
        "HashCode": 505689534,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -557273508,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -790881531,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1782541139,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld"
        }
      },
      {
        "HashCode": -850250151,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 976831883,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1803810905,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2132664619,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1192644815,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1585713820,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -179079292,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1855413743,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld"
        }
      },
      {
        "HashCode": -182810888,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -790570436,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1416959912,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1303976630,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1084582741,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 405129832,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 121660347,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1148546139,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert"
        }
      },
      {
        "HashCode": -348073737,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -900782795,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk"
        }
      },
      {
        "HashCode": -2111331140,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 160002994,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm"
        }
      },
      {
        "HashCode": -284341347,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 502752523,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt"
        }
      },
      {
        "HashCode": 1652627285,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1981604058,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem"
        }
      },
      {
        "HashCode": 1081448085,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -638187808,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": 429565574,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -497234147,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1289894538,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1371107458,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions"
        }
      },
      {
        "HashCode": 1233700841,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1012084450,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -348033242,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 659066917,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent"
        }
      },
      {
        "HashCode": -1117425177,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1715811417,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -734613645,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -712508665,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle"
        }
      },
      {
        "HashCode": -1378298384,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -490058441,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1433737066,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -184515152,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer"
        }
      },
      {
        "HashCode": -1357514374,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1324912740,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1998991723,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1141190821,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent"
        }
      },
      {
        "HashCode": 371306760,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1328947769,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1796986209,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 184799934,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": -1930688701,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -75667306,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1512953418,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1800908912,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB"
        }
      },
      {
        "HashCode": 893363953,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1502214216,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -805517996,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -177038534,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload"
        }
      },
      {
        "HashCode": -908584162,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1319251153,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText"
        }
      },
      {
        "HashCode": 1703936152,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1003729210,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden"
        }
      },
      {
        "HashCode": 1007662080,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 658468496,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -540195246,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1518030383,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -694369208,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1169267795,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1911243798,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1623255390,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": -1192700169,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 146603860,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2080783222,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2096594466,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon"
        }
      },
      {
        "HashCode": -1793074338,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2049953294,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -99672430,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -342049089,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup"
        }
      },
      {
        "HashCode": 1616713450,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1866731166,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1881725906,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2052623755,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader"
        }
      },
      {
        "HashCode": -1630047586,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -557130543,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 179738533,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2136364841,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList"
        }
      },
      {
        "HashCode": -115868153,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1356625924,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2008009018,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1568566890,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider"
        }
      },
      {
        "HashCode": 1432044656,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1670875515,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem"
        }
      },
      {
        "HashCode": -1647209052,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -68546671,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 805373452,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1130533459,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText"
        }
      },
      {
        "HashCode": -934734869,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2094393423,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1282716258,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 803010727,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText"
        }
      },
      {
        "HashCode": 636381569,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1917931843,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -4036846,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1567203777,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText"
        }
      },
      {
        "HashCode": 1262877870,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -288204558,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1965378989,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1487396726,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu"
        }
      },
      {
        "HashCode": 1884295204,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 211906822,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1520074007,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1525657812,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": 1607539694,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 188750696,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -895519679,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 799344032,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu"
        }
      },
      {
        "HashCode": -74956369,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -444159722,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1653308708,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -255589759,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": 1338623757,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1027969443,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 517957730,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1975463071,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader"
        }
      },
      {
        "HashCode": 1595465173,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 121999068,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 259972074,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -92425906,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList"
        }
      },
      {
        "HashCode": 401676266,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1495991731,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 5836956,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1303526196,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 732303437,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -399005902,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1621221273,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 164982995,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator"
        }
      },
      {
        "HashCode": 1835127717,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1349998889,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper"
        }
      },
      {
        "HashCode": -224910658,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1913965035,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2018351071,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 369635205,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost"
        }
      },
      {
        "HashCode": 287786394,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1639228452,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar"
        }
      },
      {
        "HashCode": -125970555,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1732113131,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle"
        }
      },
      {
        "HashCode": -691277586,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1879349047,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -817404189,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1248708782,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -61323428,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1540811346,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 267843814,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 789607020,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1337462747,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -641321589,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1188250711,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1766556043,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple"
        }
      },
      {
        "HashCode": 1492086903,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -138286886,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 877620258,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 304853583,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1923846924,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2010852637,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 917918987,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -754305548,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -840700139,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1146332375,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 767793735,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1472050466,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1975273314,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2085910954,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1173110605,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 976167431,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -300302532,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1611618657,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -897020465,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1584688579,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -919019310,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 967383126,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 819482727,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1719448048,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 655678828,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1909416505,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 544385246,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 441106675,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -765104477,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -952730283,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1969918841,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1621895397,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1660229546,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -749910144,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 104895219,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1007082366,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": -1166518688,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2038581187,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 790017784,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1183160881,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions"
        }
      },
      {
        "HashCode": -1131760362,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 800056743,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 355377162,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1568916811,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent"
        }
      },
      {
        "HashCode": 496907770,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1464547725,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 360151620,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 102366894,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader"
        }
      },
      {
        "HashCode": -108739758,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2067620733,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1194286095,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -718439171,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": -221299606,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -808811485,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1628260993,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1602978718,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -81333416,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2099874555,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -388484044,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 802048635,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel"
        }
      },
      {
        "HashCode": 379937296,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1244410334,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -806947590,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 299834560,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -77494687,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1480627085,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 122426659,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 223030071,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1375399832,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1003686990,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": 714375974,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -508254026,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1757011715,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1663233050,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab"
        }
      },
      {
        "HashCode": 488314808,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -262948699,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1712639485,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1721848811,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -533848596,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -193237242,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": 1940087286,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 472695920,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1787274433,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 532500726,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1139375652,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -60837137,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 486524296,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -645520724,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider"
        }
      },
      {
        "HashCode": -1880386367,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 610906385,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -187736795,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -454824877,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer"
        }
      },
      {
        "HashCode": -1856469827,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 759629706,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem"
        }
      },
      {
        "HashCode": 1011223665,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -208683442,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1086205069,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1005316370,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip"
        }
      },
      {
        "HashCode": -2127531215,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 631416946,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1660848243,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -26777395,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -346142025,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -821303434,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2035416407,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 774147199,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -614894403,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1519524755,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1731445889,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1083984649,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -244010969,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1486394293,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 776971714,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -579141774,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView"
        }
      },
      {
        "HashCode": 597408276,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 26274964,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1695516759,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 673556283,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView"
        }
      },
      {
        "HashCode": 1920065646,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 556056828,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "HashCode": -1354497006,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1882556398,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1787381022,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -226741895,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -845995650,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 491113856,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "HashCode": -1630088230,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1260163110,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "HashCode": -1517478861,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1824271145,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 239532671,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 998929282,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 466057001,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -814891779,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -617748140,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1710350317,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2045543538,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1260950144,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -478904541,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -960346322,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1384089842,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -60580888,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": -559835856,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -448980687,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": 630985097,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -125304535,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -214764182,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 911613674,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "HashCode": -1903306744,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -727150181,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "HashCode": 2066409418,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1686040786,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1513521307,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2133201149,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 167168875,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1198535796,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1723055497,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 390363260,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 975488152,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1446407728,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1357152596,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2068195826,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 313240201,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -59738011,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 420043953,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 642302611,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 901253668,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1909451877,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 78208705,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -196294007,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -837534509,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 59769185,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2095823415,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -746963065,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -717711135,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1887678544,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 607283648,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 683372111,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1764053793,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -252975011,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1881749271,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 723212908,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 774183857,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1798921474,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 762850264,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 340356547,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1151591938,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1456416150,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 38342102,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1828940249,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -199408810,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 570699508,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -459375109,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -830690705,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 995703595,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -782195052,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1864235589,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1360602316,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 344195546,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1082344211,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 873311076,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1856290898,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1542424916,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1200701125,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1209893484,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1827616163,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1206395063,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -135639205,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1902920004,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1483604146,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -145045267,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1362768929,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1936229409,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2120264642,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1664796659,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1321159735,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -149728110,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -944653272,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 671838416,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2023405188,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -388907572,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 446936610,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -831362509,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -685876499,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -789065672,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1982131930,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1050760653,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 838163318,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1560023379,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1592984195,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1753411582,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1069684344,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1302803355,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2078935349,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -67185499,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -247333477,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1006070517,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 957041472,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -54184650,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2019471684,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -185617271,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1791882691,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 373414256,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -693681880,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 972340475,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": 899238057,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind"
        }
      },
      {
        "HashCode": 2122628386,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1621065071,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -806598123,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1485551880,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 646980565,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -498409182,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 2072756337,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 330885602,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -34757060,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -296197888,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -458201023,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1506295786,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -598817022,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -401614720,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1619008684,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 238684204,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1449082464,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": -1356195936,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1305280140,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 1100381548,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1077481622,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": 606597708,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1010546759,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": -1974577964,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 152724988,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>"
        }
      },
      {
        "HashCode": 1566714809,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -939213746,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": 1755122007,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -1432916166,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1455131962,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 436384157,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": 666379142,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1886235954,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>"
        }
      },
      {
        "HashCode": 604142470,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1694771500,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": -464673534,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1379738958,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": -684006177,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1228760586,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": -1781036643,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 633512256,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": -1848263042,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1253258061,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 893385489,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 349506138,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -533050838,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 615601260,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": -1318691387,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 734616898,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>"
        }
      },
      {
        "HashCode": 1739970334,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1381296400,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": -143894792,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1128199025,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>"
        }
      },
      {
        "HashCode": -1494557397,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -78310314,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": 716722022,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1371011421,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>"
        }
      },
      {
        "HashCode": -1383715057,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 40969111,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>"
        }
      },
      {
        "HashCode": -1668366064,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1519743456,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": 35162169,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2125294595,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>"
        }
      },
      {
        "HashCode": -1815382952,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1240419556,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": 1880130954,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -574702143,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": -756736800,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1880649720,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -1760282482,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -1487687507,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 17264245,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2141947242,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": -1750855882,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": -1593104815,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1043389714,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1525791190,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": 1974775899,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1075837903,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -2085833389,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -128802970,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": 1333309667,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2029677924,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>"
        }
      },
      {
        "HashCode": 993157331,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 795516095,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>"
        }
      },
      {
        "HashCode": -1939765699,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 641017100,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 1789506887,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1735100184,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": -887363683,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -659229971,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": -537317540,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -32440147,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>"
        }
      },
      {
        "HashCode": 1393817353,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -54776458,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": 413349194,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -504599990,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": 1537437131,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1251661085,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": 593971677,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1836951212,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": -126100814,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1929076752,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": 314792030,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": -1392720126,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -138672327,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1732883951,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": -138754039,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1830275026,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": 1696088037,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1663675496,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": 770385308,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1978197719,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -2023781545,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2069224593,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>"
        }
      },
      {
        "HashCode": 1953098338,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 67861416,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>"
        }
      },
      {
        "HashCode": -1162592528,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -777731818,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -1326944063,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1639943922,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>"
        }
      },
      {
        "HashCode": -328836642,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -656422890,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": -571575540,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1730048128,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": 1414304063,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -856760617,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": 372048172,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": -2135411685,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 495726241,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1680907037,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -78058494,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": 770399295,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 680529598,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -762493117,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": 1768651995,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 116740204,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": -1584944968,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1751825542,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>"
        }
      },
      {
        "HashCode": -1000564410,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 931774755,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": -350866415,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 464728941,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
        }
      },
      {
        "HashCode": -886689320,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 128870257,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
        }
      },
      {
        "HashCode": -2091079492,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -740895083,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
        }
      },
      {
        "HashCode": 1258210574,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1021209565,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": -396711621,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -693812655,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": -1658305119,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1192035537,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": 192826806,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 800
  },
  "RootNamespace": "BlazorMediatorDemo",
  "Documents": [
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Pages/FetchData.razor",
      "TargetPath": "Pages\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Pages/Counter.razor",
      "TargetPath": "Pages\\Counter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Shared/MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Shared/SurveyPrompt.razor",
      "TargetPath": "Shared\\SurveyPrompt.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Shared/NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/braxtonknapp/Documents/MediatR_Demo/MediatR_Demo/BlazorMediatorDemo/Pages/Index.razor",
      "TargetPath": "Pages\\Index.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.2"
}